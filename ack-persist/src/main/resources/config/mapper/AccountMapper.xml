<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ack.persist.mapper.AccountMapper" >
    <resultMap id="AccountResultMap" type="org.ack.pojo.Account" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="clientId" property="clientId" jdbcType="INTEGER" />
        <result column="tradeNumber" property="tradeNumber" jdbcType="VARCHAR" />
        <result column="balance" property="balance" jdbcType="DECIMAL" />
        <result column="coin" property="coin" jdbcType="DECIMAL" />
        <result column="coinFlow" property="coinFlow" jdbcType="DECIMAL" />
        <result column="flow" property="flow" jdbcType="DECIMAL" />
        <result column="flowCase" property="flowCase" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <association  property="client" javaType="org.ack.pojo.Client">
            <id property="id" column="clientId"></id>
            <result property="phone" column="client_phone"></result>
            <result property="name" column="client_name"></result>
        </association>
    </resultMap>
    <sql id="Base_Column_List" >
    id, clientId, tradeNumber, balance, coin, coinFlow, flow, flowCase, remark, userId, createTime
  </sql>
    <select id="find" resultMap="AccountResultMap" parameterType="int" >
        SELECT
            act.id,
            act.clientId,
            act.tradeNumber,
            act.balance,
            act.coin,
            act.coinFlow,
            act.flow,
            act.flowCase,
            act.remark,
            act.createTime,
            act.userId,
            clt.`name` AS client_name,
            clt.phone AS client_phone
        FROM
            ack_account act
        LEFT JOIN ack_client clt ON act.clientId = clt.id
        where act.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="findByClientId" resultMap="AccountResultMap" parameterType="int" >
        select
        <include refid="Base_Column_List" />
        from ack_account
        where clientId = #{clientId}
    </select>
    <select id="findById" resultMap="AccountResultMap" parameterType="int" >
        SELECT
            act.id,
            act.clientId,
            act.tradeNumber,
            act.balance,
            act.coin,
            act.coinFlow,
            act.flow,
            act.flowCase,
            act.remark,
            act.createTime,
            act.userId,
            clt.`name` AS client_name,
            clt.phone AS client_phone
        FROM
            ack_account act
        LEFT JOIN ack_client clt ON act.clientId = clt.id
        where act.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteById" parameterType="int" >
    delete from ack_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="org.ack.pojo.Account" >
    insert into ack_account (id, clientId, tradeNumber,
      balance, flow, coin, coinFlow, flowCase,
      remark, userId, createTime
      )
    values (#{id,jdbcType=BIGINT}, #{clientId,jdbcType=INTEGER}, #{tradeNumber,jdbcType=VARCHAR},
      #{balance,jdbcType=DECIMAL}, #{flow,jdbcType=DECIMAL}, #{coin,jdbcType=DECIMAL},
      #{coinFlow,jdbcType=DECIMAL},#{flowCase,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.ack.pojo.Account" >
        insert into ack_account
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="clientId != null" >
                clientId,
            </if>
            <if test="tradeNumber != null" >
                tradeNumber,
            </if>
            <if test="balance != null" >
                balance,
            </if>
            <if test="flow != null" >
                flow,
            </if>
            <if test="flowCase != null" >
                flowCase,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="userId != null" >
                userId,
            </if>
            <if test="createTime != null" >
                createTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="clientId != null" >
                #{clientid,jdbcType=INTEGER},
            </if>
            <if test="tradeNumber != null" >
                #{tradenumber,jdbcType=VARCHAR},
            </if>
            <if test="balance != null" >
                #{balance,jdbcType=DECIMAL},
            </if>
            <if test="flow != null" >
                #{flow,jdbcType=DECIMAL},
            </if>
            <if test="flowCase != null" >
                #{flowcase,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                #{userid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="org.ack.pojo.Account" >
        update ack_account
        <set >
            <if test="clientId != null" >
                clientId = #{clientid,jdbcType=INTEGER},
            </if>
            <if test="tradeNumber != null" >
                tradeNumber = #{tradenumber,jdbcType=VARCHAR},
            </if>
            <if test="balance != null" >
                balance = #{balance,jdbcType=DECIMAL},
            </if>
            <if test="flow != null" >
                flow = #{flow,jdbcType=DECIMAL},
            </if>
            <if test="coin != null" >
                coin = #{coin,jdbcType=DECIMAL},
            </if>
            <if test="coinFlow != null" >
                coinFlow = #{coinFlow,jdbcType=DECIMAL},
            </if>
            <if test="flowCase != null" >
                flowCase = #{flowcase,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                userId = #{userid,jdbcType=BIGINT},
            </if>
            <if test="createTime != null" >
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateById" parameterType="org.ack.pojo.Account" >
    update ack_account
    set clientId = #{clientId,jdbcType=INTEGER},
      tradeNumber = #{tradeNumber,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL},
      coin = #{coin,jdbcType=DECIMAL},
      coinFlow = #{coinFlow,jdbcType=DECIMAL},
      flow = #{flow,jdbcType=DECIMAL},
      flowCase = #{flowCase,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=BIGINT},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="findInterceptorPageList" parameterType="org.ack.persist.page.Page"
            resultMap="AccountResultMap">
        SELECT
        act.id,
        act.clientId,
        act.tradeNumber,
        act.balance,
        act.coin,
        act.coinFlow,
        act.flow,
        act.flowCase,
        act.remark,
        act.createTime,
        clt.`name` AS client_name,
        clt.phone AS client_phone
        FROM
        ack_account act
        LEFT JOIN ack_client clt ON act.clientId = clt.id
        <where>
            1 = 1
            <if test="condition.clientId != null and condition.clientId !=''">
                and act.clientId=#{condition.clientId}
            </if>
            <if test="condition.createTime != null and condition.createTime !=''">
                and ac.createTime=#{condition.createTime}
            </if>
        </where>

    </select>
    
</mapper>