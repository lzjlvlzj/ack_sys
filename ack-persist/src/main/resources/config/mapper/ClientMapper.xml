<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ack.persist.mapper.ClientMapper">
	<resultMap type="org.ack.pojo.Client" id="ClientResultMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="userId" column="userId" />
		<result property="address" column="address" />
		<result property="phone" column="phone" />
		<result property="qq" column="qq" />
		<result property="weiXin" column="weiXin" />
		<result property="remark" column="remark" />
		<result property="createTime" column="createTime" />
		<association  property="user" javaType="org.ack.pojo.User">
			<id property="id" column="user_id"></id>
			<result property="surname" column="user_surname"></result>
		</association>
	</resultMap>

	<sql id="base_column">
		id,name,address,phone,qq,weiXin,remark,createTime,userId
	</sql>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		ack_client(name,address,phone,qq,weiXin,remark,createTime,userId)
		VALUES
		<if test="createTime != null and createTime !=''">
			(#{name},#{address},#{phone},#{qq},#{weiXin},#{remark},#{createTime},#{userId})
		</if>
		<if test="createTime == null or createTime ==''">
			(#{name},#{address},#{phone},#{qq},#{weiXin},#{remark},now(),#{userId})
		</if>
	</insert>
	<select id="findClientByUser" parameterType="org.ack.pojo.User" resultMap="ClientResultMap">
		SELECT
		<include refid="base_column"></include>
		FROM ack_client
		where userId = #{id}
	</select>

	<select id="findByIds" parameterType="int" resultMap="ClientResultMap">
		SELECT
		<include refid="base_column"></include>
		FROM ack_client ar
		where ar.id in
		<foreach collection="array" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>
	</select>

	<select id="findById" parameterType="int" resultMap="ClientResultMap">
		SELECT
			ac.id,
			ac.NAME,
			ac.address,
			ac.phone,
			ac.qq,
			ac.weiXin,
			ac.remark,
			ac.createTime,
			aur.id AS user_id,
			aur.surname AS user_surname,
			aur.name AS user_name
		FROM
			ack_client ac
		LEFT JOIN ack_user aur ON ac.userId = aur.id
		WHERE ac.id = #{id}
	</select>
	
	<select id="find" parameterType="int" resultMap="ClientResultMap">
		SELECT
			ac.id,
			ac.NAME,
			ac.address,
			ac.phone,
			ac.qq,
			ac.weiXin,
			ac.remark,
			ac.createTime,
			aur.id AS user_id,
			aur.surname AS user_surname,
			aur.name AS user_name
		FROM
			ack_client ac
		LEFT JOIN ack_user aur ON ac.userId = aur.id
		WHERE ac.id = #{id}
	</select>

	<update id="update" parameterType="Client">
		UPDATE
		ack_client ar
		<set>
			<if test="name != null and name !=''">
				ar.name = #{name},
			</if>
			<if test="address != null and address !=''">
				ar.address = #{address},
			</if>
			<if test="phone != null and phone !=''">
				ar.phone = #{phone},
			</if>
			<if test="qq != null and qq !=''">
				ar.qq = #{qq},
			</if>
			<if test="weiXin != null and weiXin !=''">
				ar.weiXin = #{weiXin},
			</if>
			<if test="createTime != null and createTime !=''">
				ar.createTime = #{createTime},
			</if>
			<if test="userId != null and userId !=''">
				ar.userId = #{userId},
			</if>
		</set>
		<where>
			ar.id = #{id}
		</where>
	</update>

	<delete id="deleteById" parameterType="int">
		DELETE FROM ack_client
		WHERE id = #{id}
	</delete>

	<delete id="delete" parameterType="Client">
		DELETE FROM ack_client
		WHERE id = #{id}
	</delete>

	<select id="findAll" resultMap="ClientResultMap">
		SELECT
			ac.id,
			ac.NAME,
			ac.address,
			ac.phone,
			ac.qq,
			ac.weiXin,
			ac.remark,
			ac.createTime,
			aur.id AS user_id,
			aur.surname AS user_surname,
			aur.name AS user_name
		FROM
			ack_client ac
		LEFT JOIN ack_user aur ON ac.userId = aur.id
	</select>
	
	<select id="findInterceptorPageList" parameterType="org.ack.persist.page.Page"
		resultMap="ClientResultMap">
		SELECT
			ac.id,
			ac.NAME,
			ac.address,
			ac.phone,
			ac.qq,
			ac.weiXin,
			ac.remark,
			ac.createTime,
			aur.id AS user_id,
			aur.surname AS user_surname,
			aur.name AS user_name
		FROM
			ack_client ac
		LEFT JOIN ack_user aur ON ac.userId = aur.id
		<where>
		    1 = 1
		    <if test="condition.name != null and condition.name !=''">
			    and ac.name=#{condition.name}
		    </if>
		    <if test="condition.phone != null and condition.phone !=''">
			    and ac.phone=#{condition.phone}
		    </if>
			<if test="condition.qq != null and condition.qq !=''">
				and ac.qq=#{condition.qq}
			</if>
		</where>
		
	</select>

</mapper>